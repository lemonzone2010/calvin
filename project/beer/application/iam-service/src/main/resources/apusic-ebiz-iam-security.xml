<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<context:component-scan  base-package="com.apusic.ebiz.iam"/>

	<beans:import resource="classpath:apusic-ebiz-framework-core.xml" />

	<!-- <beans:bean class="org.operamasks.faces.spring.ManagedBeanConfigurer" /> -->

	<global-method-security secured-annotations="enabled"
		access-decision-manager-ref="businessAccessDecisionManager" />

	<beans:bean id="businessAccessDecisionManager"
		class="org.springframework.security.access.vote.UnanimousBased">
		<beans:property name="allowIfAllAbstainDecisions"
			value="false" />
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:ref local="roleVoter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="roleVoter"
		class="org.springframework.security.access.vote.RoleVoter"/>

	<http use-expressions="true" auto-config='true'  entry-point-ref="casEntryPoint" access-denied-page="/unauthorized.faces">
		<session-management session-fixation-protection="none"></session-management>
		<custom-filter ref="casFilter" before="FORM_LOGIN_FILTER" />
		<logout invalidate-session="true" logout-url="/logout"/>
		<custom-filter ref="casSingleSignOutFilter" position="FIRST"/>
		<custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR"/>
	</http>

	<beans:bean id="casSingleSignOutFilter" class="com.apusic.ebiz.iam.cas.SingleSignOutFilter"/>

	<beans:bean id="filterSecurityInterceptor" class="com.apusic.ebiz.iam.security.access.intercept.FilterSecurityInterceptor">
      	<beans:property name="authenticationManager" ref="authenticationManager" />
        <!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源     -->
        <beans:property name="accessDecisionManager" ref="iam_AccessDecisionManager" />
        <beans:property name="securityMetadataSource" ref="iam_SecurityMetadataSource" />
    </beans:bean>

	<!-- 通过数据库获取用户信息
	<jdbc-user-service data-source-ref="dataSource" id="userService"
		users-by-username-query="SELECT U.f_name AS username, U.f_password, U.f_disabled AS enabled from T_User U where U.f_name=?"
		authorities-by-username-query="SELECT U.f_name AS username, R.f_role_name as authority FROM T_User U JOIN T_USER_ROLE_GRANT A ON u.f_id = A.f_user_id JOIN T_USER_Role R ON R.f_id = A.f_role_id WHERE U.f_name=?"
	/>
	 -->

	<beans:bean id="serviceProperties"
		class="org.springframework.security.cas.ServiceProperties">
		<beans:property name="service"
			value="http://${my.server.ip}:${server.port}/${my.context}/j_spring_cas_security_check" />
		<beans:property name="sendRenew" value="false" />
	</beans:bean>

	<beans:bean id="casFilter"
		class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>

	<beans:bean id="casEntryPoint"
		class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<beans:property name="loginUrl"
			value="${cas.login.protocol}://${cas.server.ip}:${ssl.port}/${cas.context}/login" />
		<beans:property name="serviceProperties" ref="serviceProperties" />
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="casAuthenticationProvider" />
	</authentication-manager>

	<beans:bean id="casAuthenticationProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<beans:property name="userDetailsService" ref="iam_UserDetailsService" />
		<beans:property name="serviceProperties" ref="serviceProperties" />
		<beans:property name="ticketValidator">
			<beans:bean
				class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<beans:constructor-arg index="0"
					value="${cas.login.protocol}://${cas.server.ip}:${ssl.port}/${cas.context}" />
			</beans:bean>
		</beans:property>
		<beans:property name="key" value="${app.key}" />
	</beans:bean>
</beans:beans>